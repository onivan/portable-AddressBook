<?xml version="1.0" encoding="UTF-8"?>

<project name="addressBook" default="build" basedir=".">
	<description>AddressBook application, Juan Timoteo Ponce Ortiz. UAGRM.</description>

	<property file="build.properties" />
	<!--<import file="${classpath.location}" />-->

	<path id="compile.classpath">
		<fileset dir="lib" includes="**/*.jar" />
		<!--<path refid="log4j.classpath"/>-->
		<!--<path refid="jdbc-sqlite.classpath"/>-->
	</path>

	<path id="src.path">
		<pathelement location="${project.src}" />
	</path>

	<path id="run.classpath">
		<path refid="compile.classpath" />
		<path location="${project.build}" />
		<path location="${project.config}" />
		<path location="${project.resources}" />
	</path>

	<path id="test.classpath">
		<path refid="run.classpath" />
	</path>


	<target name="init">
		<mkdir dir="${project.config}" />
		<mkdir dir="${project.resources}" />
		<mkdir dir="${project.src}" />
		<mkdir dir="${project.test}" />
		<mkdir dir="${project.lib}" />
	</target>

	<target name="compile-test" depends="compile">
		<javac encoding="iso-8859-1" destdir="${project.build}" classpathref="test.classpath" includes="**/*.java" debug="true">
			<src path="${project.test}" />
		</javac>
	</target>


	<target name="prepare">
		<mkdir dir="${project.build}" />
	</target>

	<target name="build" depends="compile" description="Build the project incrementally.">
	</target>

	<target name="clean">
		<delete dir="${project.build}" />
	</target>

	<target name="compile" depends="prepare" description="Compile the sources (checked in and generated)">
		<copy todir="${project.build}">
			<fileset dir="${project.src}">
				<include name="**/*.properties" />
			</fileset>			
			<fileset dir="${project.config}">
				<include name="*.properties" />
				<include name="*.xml" />
			</fileset>
		</copy>
		<javac encoding="iso-8859-1" destdir="${project.build}" classpathref="compile.classpath" includes="**/*.java" debug="true">
			<src path="${project.src}" />
		</javac>
	</target>


	<target name="jar" depends="build" description="Build a distribution jar file">
		<delete dir="${project.build.dist}" />
		<mkdir dir="${project.build.dist}" />

		<copy todir="${project.build.dist}/lib">
			<fileset dir="lib" includes="*.jar" />
		</copy>

		<copy todir="${project.build.dist}/config">
			<fileset dir="${project.config}" includes="*" />
		</copy>

		<copy todir="${project.build.dist}/resources">
			<fileset dir="${project.resources}" includes="**/*" />
		</copy>

		<copy todir="${project.build.dist}/database">
			<fileset dir="${basedir}/database" includes="*.db" />
		</copy>

		<path id="jar.lib.classpath">
			<fileset dir="lib">
				<include name="*.jar" />
			</fileset>
			<pathelement location="${project.config}" />
			<pathelement location="${project.resources}" />
		</path>

		<manifestclasspath property="jar.classpath" jarfile="${basedir}/${dist.jar.name}">
			<classpath refid="jar.lib.classpath" />
		</manifestclasspath>

		<jar destfile="${project.build.dist}/${dist.jar.name}">
			<manifest>
				<attribute name="Built-By" value="${application.author}" />
				<section name="common">
					<attribute name="Specification-Title" value="${application.name}" />
					<attribute name="Specification-Version" value="${application.release}" />
					<attribute name="Specification-Vendor" value="${application.author}" />
					<attribute name="Implementation-Title" value="${application.name}" />
					<attribute name="Implementation-Version" value="${application.release} ${TODAY}" />
				</section>
				<attribute name="Main-Class" value="${main.class}" />
				<attribute name="Class-Path" value="${jar.classpath}" />
			</manifest>
			<fileset dir="${project.build}">
				<include name="**" />
				<exclude name="**/*Test.class" />
				<exclude name="*.*" />
				<exclude name="*.db" />
				<exclude name="dist" />
				<exclude name="reports" />
			</fileset>
		</jar>
	</target>


	<!-- currently not used -->
	<target name="dist" depends="build,jar">
		<property name="base.name" value="${ant.project.name}" />
		<delete dir="release" />
		<delete dir="dist" />
		<mkdir dir="dist" />
		<mkdir dir="release" />

		<copy todir="release/config">
			<fileset dir="config" includes="**" />
		</copy>

		<copy todir="release/templates">
			<fileset dir="templates" includes="**" />
		</copy>

		<copy todir="release/help">
			<fileset dir="help" includes="**" />
		</copy>

		<copy todir="release/lib">
			<fileset dir="lib" includes="**/*.jar" />
		</copy>

		<copy todir="release/common_libs">
			<fileset dir="common_libs" includes="**/*" />
		</copy>

		<copy todir="release" file="${project.build.dist}/${dist.jar.name}" />

		<zip destfile="dist/${release.name}">
			<zipfileset dir="release/" includes="**/*.*" />
		</zip>
		<delete dir="release" />

	</target>

	<target name="run" description="Run the app" depends="build">
		<java classname="${main.class}" fork="true" classpathref="run.classpath" />
	</target>

	<target name="copy-libs" description="Copy repo libs to lib folder">
		<copy todir="lib">
			<path refid="compile.classpath" />
		</copy>
	</target>

	<target name="test" depends="compile-test">
		<property name="junit.dest" value="${project.build.report}"/>
		<mkdir dir="${junit.dest}" />

		<junit fork="yes" forkmode="once" printsummary="yes" haltonfailure="yes">
			<classpath>
				<path refid="test.classpath" />
			</classpath>
			<formatter type="plain" usefile="false" />
			<formatter type="xml" />
			<batchtest todir="${junit.dest}">
				<fileset dir="${project.test}">
					<include name="**/*Test.java" />
				</fileset>
			</batchtest>
		</junit>
		<junitreport todir="${junit.dest}">
			<fileset dir="${junit.dest}" includes="TEST-*.xml" />
			<report format="frames" todir="${junit.dest}" />
		</junitreport>
	</target>

</project>
